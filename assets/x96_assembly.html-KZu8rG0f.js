import{_ as s,c as a,f as l,o as n}from"./app-COwvSt6C.js";const i={};function t(r,e){return n(),a("div",null,e[0]||(e[0]=[l(`<h1 id="x96-assembly-tutorial" tabindex="-1"><a class="header-anchor" href="#x96-assembly-tutorial"><span>x96 Assembly Tutorial</span></a></h1><h2 id="tools" tabindex="-1"><a class="header-anchor" href="#tools"><span>Tools</span></a></h2><p>To program in x96 Assembly, you need to use certain tools:</p><ul><li>An Assembler: <a href="https://github.com/Ignitem/aspp/" target="_blank" rel="noopener noreferrer"><code>as++</code></a></li><li>A Linker of your choice (<a href="https://www.gnu.org/software/binutils/" target="_blank" rel="noopener noreferrer"><code>ld</code></a>, <a href="https://visualstudio.microsoft.com/fr/downloads/#build-tools-for-visual-studio-2022" target="_blank" rel="noopener noreferrer">MSVC Linker</a>, ...)</li><li>A Debugger of your choice (<a href="https://www.gnu.org/software/gdb/" target="_blank" rel="noopener noreferrer"><code>gdb</code></a>, <a href="https://visualstudio.microsoft.com/fr/downloads/#build-tools-for-visual-studio-2022" target="_blank" rel="noopener noreferrer">MSVC Debugger</a>, ...)</li></ul><h2 id="setup" tabindex="-1"><a class="header-anchor" href="#setup"><span>Setup</span></a></h2><p>In your favorite code editor/IDE, create a new <code>*.asm</code> file (like <code>main.asm</code>), and add the following content:</p><div class="language-asm line-numbers-mode" data-highlighter="prismjs" data-ext="asm" data-title="main.asm"><pre><code><span class="line">global start</span>
<span class="line"></span>
<span class="line">section .text</span>
<span class="line">start:</span>
<span class="line">    ; Start of the program (main function in C/C++, ...)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, let&#39;s make a simple Linux exit syscall:</p><div class="language-ams line-numbers-mode" data-highlighter="prismjs" data-ext="ams" data-title="main.asm"><pre><code><span class="line">global start</span>
<span class="line"></span>
<span class="line">section .text</span>
<span class="line">start:</span>
<span class="line highlighted">    mov rao, 60 ; Linux exit syscall number</span>
<span class="line highlighted">    mov rbo, 70 ; Custom exit code</span>
<span class="line highlighted">    syscall     ; Executing the system call</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="building-the-executable" tabindex="-1"><a class="header-anchor" href="#building-the-executable"><span>Building the executable</span></a></h2><p>To build the executable file, we need first to assemble the assembly code:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">as++ main.asm <span class="token parameter variable">-o</span> main <span class="token parameter variable">-t</span> x96</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>as++</code>: Ignitem&#39;s assembler</li><li><code>main.asm</code>: Our assembly source file</li><li><code>-o main</code>: The output object file</li><li><code>-t x96</code>: The output architecture (targer)</li></ul><p>Then,</p>`,14)]))}const d=s(i,[["render",t],["__file","x96_assembly.html.vue"]]),c=JSON.parse('{"path":"/tutorials/x96_assembly.html","title":"x96 Assembly Tutorial","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Tools","slug":"tools","link":"#tools","children":[]},{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"Building the executable","slug":"building-the-executable","link":"#building-the-executable","children":[]}],"git":{"updatedTime":1728502997000,"contributors":[{"name":"foxy pirate cove / Fnaf","email":"108185011+foxypiratecove37350@users.noreply.github.com","commits":1}]},"filePathRelative":"tutorials/x96_assembly.md"}');export{d as comp,c as data};
