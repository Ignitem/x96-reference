import{_ as l,c as s,a as t,b as n,d as a,e as o,f as d,r,o as m}from"./app-CywGafa-.js";const x={};function b(p,i){const e=r("RouteLink");return m(),s("div",null,[i[14]||(i[14]=t("h1",{id:"x86-compatibility-mode",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#x86-compatibility-mode"},[t("span",null,"x86 Compatibility Mode")])],-1)),i[15]||(i[15]=t("h2",{id:"activation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#activation"},[t("span",null,"Activation")])],-1)),i[16]||(i[16]=t("p",null,"There's two way to activate the x86 Compatibility mode:",-1)),t("ol",null,[t("li",null,[i[1]||(i[1]=n("Launching a x86 binary (deducted based on ")),a(e,{to:"/compatibility_mode.html#x86-binary-detection"},{default:o(()=>i[0]||(i[0]=[n("statistical analysis")])),_:1}),i[2]||(i[2]=n(")"))]),i[3]||(i[3]=t("li",null,"Booting the CPU in x86 Compatibility Mode",-1))]),i[17]||(i[17]=t("h3",{id:"launching-a-x86-binary",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#launching-a-x86-binary"},[t("span",null,"Launching a x86 Binary")])],-1)),i[18]||(i[18]=t("h4",{id:"x86-binary-detection",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#x86-binary-detection"},[t("span",null,"x86 Binary Detection")])],-1)),i[19]||(i[19]=t("p",null,"x96 Microsoftware uses statistical analysis to find if a binary is a x86 binary or x96:",-1)),t("ul",null,[t("li",null,[i[6]||(i[6]=n("No x96-specific encoding (")),a(e,{to:"/embedded_comments.html"},{default:o(()=>i[4]||(i[4]=[n("embedded comments")])),_:1}),i[7]||(i[7]=n(", ")),a(e,{to:"/operand_encodings.html"},{default:o(()=>i[5]||(i[5]=[n("x96 operend encodings")])),_:1}),i[8]||(i[8]=n(", ...)"))]),i[9]||(i[9]=t("li",null,[n("Presence of x86 prefixes ("),t("code",null,"REX"),n(", "),t("code",null,"REX.W"),n(", ...)")],-1)),i[10]||(i[10]=t("li",null,"Presence of x86 operand encodings",-1))]),i[20]||(i[20]=t("h4",{id:"x86-binary-execution",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#x86-binary-execution"},[t("span",null,"x86 Binary Execution")])],-1)),i[21]||(i[21]=t("p",null,"To execute x86 binaries, the x96 Microsoftware reboot the CPU in x86 Compatibility Mode and then execute the binary.",-1)),i[22]||(i[22]=t("h4",{id:"limitations",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#limitations"},[t("span",null,"Limitations")])],-1)),t("ul",null,[t("li",null,[i[12]||(i[12]=n("Add a little overhead with the ")),a(e,{to:"/compatibility_mode.html#x86-binary-detection"},{default:o(()=>i[11]||(i[11]=[n("x86 binary detection")])),_:1}),i[13]||(i[13]=n(" and the x86 to x96 translation at runtime."))])]),i[23]||(i[23]=d('<h3 id="booting-in-x86-compatibility-mode" tabindex="-1"><a class="header-anchor" href="#booting-in-x86-compatibility-mode"><span>Booting in x86 Compatibility Mode</span></a></h3><p>The x86 Compatibility Mode can be activated by setting the <code>x86_compat</code> flag in the BIOS.</p><h4 id="limitations-1" tabindex="-1"><a class="header-anchor" href="#limitations-1"><span>Limitations</span></a></h4><ul><li>x96-specific instructions are not available</li><li>x96-specific encodings are not available</li><li>x96-specific registers are not available</li><li>x96-specific data sizes are not available</li><li>x96-specific features are not available</li></ul>',4))])}const y=l(x,[["render",b],["__file","compatibility_mode.html.vue"]]),f=JSON.parse('{"path":"/compatibility_mode.html","title":"x86 Compatibility Mode","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Activation","slug":"activation","link":"#activation","children":[{"level":3,"title":"Launching a x86 Binary","slug":"launching-a-x86-binary","link":"#launching-a-x86-binary","children":[]},{"level":3,"title":"Booting in x86 Compatibility Mode","slug":"booting-in-x86-compatibility-mode","link":"#booting-in-x86-compatibility-mode","children":[]}]}],"git":{"updatedTime":1728410015000,"contributors":[{"name":"foxy pirate cove / Fnaf","email":"108185011+foxypiratecove37350@users.noreply.github.com","commits":1}]},"filePathRelative":"compatibility_mode.md"}');export{y as comp,f as data};
